{"version":3,"file":"module.cjs","sources":["src/module.js"],"sourcesContent":["import { Tokenizer, evalToken } from \"liquidjs\";\n\n/**\n * @callback SetVar\n * @param {string} index\n * @param {any} value\n * @returns {void}\n */\n\n/**\n * @callback Render\n * @param {string} index - Name of the index to associate with the execution\n * @param {Object<string,any>} value - value captured by expression as object\n * @param {SetVar} setVar - allows defining a context value for the content lower than the invocation of the tag\n * @returns {Promise<void>|void}\n */\n\n/**\n * Facilita la creacion de tags personalizados para liquid\n * ofreciendo un patron generico de configuracion para estos\n * `myTag {index} with {value}`\n * @param {{render:Render}} tag\n */\nexport default function createTag(tag) {\n    return {\n        parse({ args }) {\n            const tokenizer = new Tokenizer(args);\n\n            this.index = tokenizer.readFileName().content;\n\n            tokenizer.skipBlank();\n\n            if (tokenizer.peek() === \"=\") {\n                this.type = \"=\";\n                tokenizer.advance();\n                this.expression = tokenizer.remaining();\n            } else {\n                let withValue = tokenizer.readWord();\n                if (withValue && withValue.content == \"with\") {\n                    tokenizer.skipBlank();\n                    this.expression = tokenizer.readHashes();\n                }\n            }\n        },\n        async render(scope) {\n            let { index, expression } = this;\n            if (/^(\"|')/.test(index)) {\n                index = index.replace(/^(\"|')|(\"|')$/g, \"\");\n            } else {\n                index = await this.liquid.evalValue(index, scope);\n            }\n            const value =\n                this.type == \"=\"\n                    ? await this.liquid.evalValue(expression, scope)\n                    : expression\n                    ? await Promise.all(\n                          expression.map(async (hash) => {\n                              return {\n                                  index: hash.name.content,\n                                  value: evalToken(hash.value, scope),\n                              };\n                          })\n                      ).then((props) => {\n                          const data = {};\n                          props.forEach(({ index, value }) => {\n                              data[index] = value;\n                          });\n                          return data;\n                      })\n                    : {};\n\n            return tag.render.call(\n                this,\n                scope.environments,\n                index,\n                value,\n                (index, value) => (scope.bottom()[index] = value)\n            );\n        },\n    };\n}\n"],"names":["Tokenizer","evalToken"],"mappings":"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"}